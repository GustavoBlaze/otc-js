import { InputMessage } from "~/net";

export interface IProtocolGameParse {
  parseStoreButtonIndicators(msg: InputMessage): void;
  parseSetStoreDeepLink(msg: InputMessage): void;
  parseStore(msg: InputMessage): void;
  parseStoreError(msg: InputMessage): void;
  parseStoreTransactionHistory(msg: InputMessage): void;
  parseStoreOffers(msg: InputMessage): void;
  parseCompleteStorePurchase(msg: InputMessage): void;
  parseRequestPurchaseData(msg: InputMessage): void;
  parseCoinBalance(msg: InputMessage): void;
  parseCoinBalanceUpdating(msg: InputMessage): void;
  parseBlessings(msg: InputMessage): void;
  parseUnjustifiedStats(msg: InputMessage): void;
  parsePvpSituations(msg: InputMessage): void;
  parsePreset(msg: InputMessage): void;
  parseCreatureType(msg: InputMessage): void;
  parsePlayerHelpers(msg: InputMessage): void;
  parseMessage(msg: InputMessage): void;
  parsePendingGame(msg: InputMessage): void;
  parseEnterGame(msg: InputMessage): void;
  parseLogin(msg: InputMessage): void;
  parseGMActions(msg: InputMessage): void;
  parseUpdateNeeded(msg: InputMessage): void;
  parseLoginError(msg: InputMessage): void;
  parseLoginAdvice(msg: InputMessage): void;
  parseLoginWait(msg: InputMessage): void;
  parseLoginToken(msg: InputMessage): void;
  parsePing(msg: InputMessage): void;
  parsePingBack(msg: InputMessage): void;
  parseChallenge(msg: InputMessage): void;
  parseDeath(msg: InputMessage): void;
  parseMapDescription(msg: InputMessage): void;
  parseMapMoveNorth(msg: InputMessage): void;
  parseMapMoveEast(msg: InputMessage): void;
  parseMapMoveSouth(msg: InputMessage): void;
  parseMapMoveWest(msg: InputMessage): void;
  parseUpdateTile(msg: InputMessage): void;
  parseTileAddThing(msg: InputMessage): void;
  parseTileTransformThing(msg: InputMessage): void;
  parseTileRemoveThing(msg: InputMessage): void;
  parseCreatureMove(msg: InputMessage): void;
  parseOpenContainer(msg: InputMessage): void;
  parseCloseContainer(msg: InputMessage): void;
  parseContainerAddItem(msg: InputMessage): void;
  parseContainerUpdateItem(msg: InputMessage): void;
  parseContainerRemoveItem(msg: InputMessage): void;
  parseAddInventoryItem(msg: InputMessage): void;
  parseRemoveInventoryItem(msg: InputMessage): void;
  parseOpenNpcTrade(msg: InputMessage): void;
  parsePlayerGoods(msg: InputMessage): void;
  parseCloseNpcTrade(msg: InputMessage): void;
  parseWorldLight(msg: InputMessage): void;
  parseMagicEffect(msg: InputMessage): void;
  parseAnimatedText(msg: InputMessage): void;
  parseDistanceMissile(msg: InputMessage): void;
  parseCreatureMark(msg: InputMessage): void;
  parseTrappers(msg: InputMessage): void;
  parseCreatureHealth(msg: InputMessage): void;
  parseCreatureLight(msg: InputMessage): void;
  parseCreatureOutfit(msg: InputMessage): void;
  parseCreatureSpeed(msg: InputMessage): void;
  parseCreatureSkulls(msg: InputMessage): void;
  parseCreatureShields(msg: InputMessage): void;
  parseCreatureUnpass(msg: InputMessage): void;
  parseEditText(msg: InputMessage): void;
  parseEditList(msg: InputMessage): void;
  parsePremiumTrigger(msg: InputMessage): void;
  parsePlayerInfo(msg: InputMessage): void;
  parsePlayerStats(msg: InputMessage): void;
  parsePlayerSkills(msg: InputMessage): void;
  parsePlayerState(msg: InputMessage): void;
  parsePlayerCancelAttack(msg: InputMessage): void;
  parsePlayerModes(msg: InputMessage): void;
  parseSpellCooldown(msg: InputMessage): void;
  parseSpellGroupCooldown(msg: InputMessage): void;
  parseMultiUseCooldown(msg: InputMessage): void;
  parseTalk(msg: InputMessage): void;
  parseChannelList(msg: InputMessage): void;
  parseOpenChannel(msg: InputMessage): void;
  parseOpenPrivateChannel(msg: InputMessage): void;
  parseOpenOwnPrivateChannel(msg: InputMessage): void;
  parseCloseChannel(msg: InputMessage): void;
  parseRuleViolationChannel(msg: InputMessage): void;
  parseRuleViolationRemove(msg: InputMessage): void;
  parseRuleViolationCancel(msg: InputMessage): void;
  parseRuleViolationLock(msg: InputMessage): void;
  parseOwnTrade(msg: InputMessage): void;
  parseCounterTrade(msg: InputMessage): void;
  parseCloseTrade(msg: InputMessage): void;
  parseTextMessage(msg: InputMessage): void;
  parseCancelWalk(msg: InputMessage): void;
  parseWalkWait(msg: InputMessage): void;
  parseFloorChangeUp(msg: InputMessage): void;
  parseFloorChangeDown(msg: InputMessage): void;
  parseOpenOutfitWindow(msg: InputMessage): void;
  parseVipAdd(msg: InputMessage): void;
  parseVipState(msg: InputMessage): void;
  parseVipLogout(msg: InputMessage): void;
  parseTutorialHint(msg: InputMessage): void;
  parseAutomapFlag(msg: InputMessage): void;
  parseQuestLog(msg: InputMessage): void;
  parseQuestLine(msg: InputMessage): void;
  parseChannelEvent(msg: InputMessage): void;
  parseItemInfo(msg: InputMessage): void;
  parsePlayerInventory(msg: InputMessage): void;
  parseModalDialog(msg: InputMessage): void;
  parseExtendedOpcode(msg: InputMessage): void;
  parseChangeMapAwareRange(msg: InputMessage): void;
  parseCreaturesMark(msg: InputMessage): void;
}
